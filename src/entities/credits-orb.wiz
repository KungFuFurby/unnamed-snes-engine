// Copyright (c) 2022, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "../memmap";

import "_variables";
import "_base";
import "../gamemodes";

import "gen/enums";
import "../../gen/entities";


namespace entities {
namespace credits_orb {


in wram7e_roomstate {
    var SoA_zTableIndex : [ u8 ; SoA.BA_SIZE ] in SoA.state_0_l;
}


in code {


// DB = 0x7e
#[mem8, idx8]
func init(entityId : u8 in y, parameter : u8 in x) {
    // SoA_zTableIndex is zero

    SoA.zPos[y] = a = ZPosTable[0];
}



// DB = 0x7e
#[mem8, idx8]
func process(entityId : u8 in y) {

    base.process_collisions(y);

    if collisionState $ CollisionState.PLAYER_HURTBOX_BIT {
        a = GameModes.CREDITS as u8;
        gameMode = a as GameModes;
    }


    x = SoA_zTableIndex[y];
    x++;
    if x >= ZPOS_TABLE_SIZE {
        x = 0;
    }
    SoA_zTableIndex[y] = a = x;

    SoA.zPos[y] = a = ZPosTable[x];
}

}



in rodata0 {
    // Table created using python
    //
    // >>> import math
    // >>> [ round(11 + 3 * math.sin(math.radians(i * 360 / 90))) for i in range(90) ]
    const __ZPosTable : [ u8 ] = [11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11];

    let ZPOS_TABLE_SIZE = sizeof(typeof(__ZPosTable));

    let ZPosTable = far &__ZPosTable as far *u8;
}

}
}

