// Copyright (c) 2021, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "../memmap";

import "_variables";

import "../metatiles";


namespace entities {
namespace bouncing_off_walls {

in code {


// Entity process routine.
//
// Called when the entity is spawned
//
// DB = 0x7e
#[mem8, idx8]
func init(entityId : u8 in x) {
    mem16();
    #[mem16] {
        SoA.xVelocity[unaligned x] = aa =  0x0120;
        SoA.yVelocity[unaligned x] = aa = -0x0120 as u16;
    }
    mem8();
}


// Entity process routine.
//
// Called once per frame.
//
// DB = 0x7e
#[mem8, idx8]
func process(entityId : u8 in x) {
    metatiles.move_entity_and_collision_test(x);

    a = SoA.movementState[x];
    if a & MovementState.X_AXIS_COLLISION != 0 {
        mem16();
        #[mem16] {
            SoA.xVelocity[unaligned x] = aa = 0 - SoA.xVelocity[unaligned x];
        }
        mem8();
    }

    a = SoA.movementState[x];
    if a & MovementState.Y_AXIS_COLLISION != 0 {
        mem16();
        #[mem16] {
            SoA.yVelocity[unaligned x] = aa = 0 - SoA.yVelocity[unaligned x];
        }
        mem8();
    }
}



}

}
}

