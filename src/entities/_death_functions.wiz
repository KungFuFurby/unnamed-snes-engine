// Copyright (c) 2021, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "../memmap";
import "smoke-particles";

import "../../gen/entities";

namespace entities {
namespace death_functions {

in code {

// Do nothing
//
// Returns true if the entity is still active
//
// DB = 0x7e
#[mem8, idx8]
func none(entityId : u8 in y) : bool in carry {
    return false;
}


// Transform the entity into a small smoke particle.
//
// Returns true if the entity is still active
//
// DB = 0x7e
#[mem8, idx8]
func small_smoke(entityId : u8 in y) : bool in carry {
    // ::TODO increment zPos::
    entities.smoke_particles.change_to_smoke_entity(y, smoke_particles.init_parameter.small as u8);
    return true;
}

// Transform the entity into a ground smoke particle.
//
// Returns true if the entity is still active
//
// DB = 0x7e
#[mem8, idx8]
func ground_smoke(entityId : u8 in y) : bool in carry {
    entities.smoke_particles.change_to_smoke_entity(y, smoke_particles.init_parameter.ground as u8);
    return true;
}

}


}
}

