// Copyright (c) 2021, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "memmap";


import "gameloop";
import "gamemodes/title-screen";
import "gamemodes/game-over";
import "gamemodes/credits";
import "gamemodes/sound-test";
import "room-transitions";


enum GameModes : u8 {
    RUN_GAME,

    TITLE_SCREEN,

    GAME_OVER,

    CREDITS,

    SOUND_TEST,


    // Fadeout the screen, initialise the player and gameloop, and start the game.
    //
    // MUST BE used when the gamestate is loaded/reset, before any other room transitions occur.
    //
    // Assumes the current room/position is valid.  Will softlock if invalid.
    START_GAMELOOP,

    // Fadeout the screen, load a room, fadein the screen and start the gameloop.
    // `currentRoom` contains room to load.
    // To be used if the screen is blank.
    LOAD_ROOM_FADEIN,

    // Fadeout the screen, load a room, fadein the screen and start the gameloop.
    //`currentRoom` contains room to load.
    // To be used if the screen is active.
    ROOM_TRANSITION_FADEOUT,

    // Scroll transition to next room.
    // Will do a fadeout room transition if the room graphics are different to the current room.
    ROOM_TRANSITION_SCROLL_LEFT,
    ROOM_TRANSITION_SCROLL_RIGHT,
    ROOM_TRANSITION_SCROLL_UP,
    ROOM_TRANSITION_SCROLL_DOWN,
};



in lowram {
    var     gameMode : GameModes;
}



in code {


// MUST MATCH GameModes enum
#[mem8, idx8]
const gamemode_function_table : [func()] = [
    gameloop.run_game,
    gamemodes.title_screen.exec,
    gamemodes.game_over.exec,
    gamemodes.credits.exec,
    gamemodes.sound_test.exec,
    room_transitions.start_gameloop,
    room_transitions.load_room__fadein,
    room_transitions.fadeout,
    room_transitions.scroll_left,
    room_transitions.scroll_right,
    room_transitions.scroll_up,
    room_transitions.scroll_down,
];

let N_GAME_MODES = sizeof(typeof(gamemode_function_table)) / 2;


}

