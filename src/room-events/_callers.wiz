// Copyright (c) 2022, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "../memmap";

import "_common";
import "../room";
import "gen/room-events-function-tables";

namespace room_events {


// Initialize the room event subsystem and call the event's init function.
//
// MUST BE called after the room is loaded.
//
// ASSUMES: entities subsystem is initialised.
//
// DB = 0x7e
#[mem8, idx8]
inline func init__inline() {
    let MAX_REF = (N_ROOM_EVENT_FUNCTIONS - 1) * 2;


    // Clear state variables
    mem16();
    #[mem16] {
        room_events.state_0 = 0;
        room_events.state_1 = 0;
        room_events.state_2 = 0;
        room_events.state_3 = 0;
        room_events.state_4 = 0;
    }
    mem8();

    // Validate `roomEventFunction`
    a = room.roomEventFunction & 0xfe;
    if a >= MAX_REF + 1{
        a = MAX_REF;
    }
    room.roomEventFunction = a;

    x = a;
    room_events.init_function_table[unaligned x]();
}



// Call the room event's process function.
//
// DB = 0x7e
#[mem8, idx8]
inline func process__inline() {
    x = room.roomEventFunction;
    room_events.process_function_table[unaligned x]();
}


}

