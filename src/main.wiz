// Copyright (c) 2021, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "memmap";
import "../wiz/common/snes/snes";

import "common/reset";
import "common/dma";

import "gameloop";
import "gamestate";
import "gamemodes";
import "metatiles";
import "metasprites";
import "resources";
import "resources-over-usb2snes";


import "src/entities/sword-particles";
import "src/entities/bouncing-off-walls";
import "src/entities/crossbow-man";
import "src/entities/key";
import "src/entities/skeleton";
import "src/entities/slime";
import "src/entities/swarming";
import "src/entities/rook";
import "src/entities/smoke-particles";
import "src/entities/projectile";
import "src/entities/projectile-angled";
import "src/entities/test--calc-angle";


in code {


// DB = 0x80
#[fallthrough, mem8, idx16]
func main() {
    snes.ppu.brightness = a = snes.ppu.BRIGHTNESS_FORCE_BLANK;

    resources_over_usb2snes.init();

    metasprites.setup__forceblank();

    snes.ppu.irq_enable = a = snes.ppu.IRQ_ENABLE_AUTOJOY | snes.ppu.IRQ_ENABLE_NMI;


    push8(a = 0x7e);
    data_bank = pop8();
// DB = 0x7e

    idx8();
    #[idx8] {
        gamestate.init();

        gameloop.init();


        while true {
            a = gameMode as u8;
            if a >= N_GAME_MODES {
                // Break
                irqcall(0);
            }

            x = a = a << 1;
            gamemode_function_table[unaligned x]();
        }
    }
}

}

