// Copyright (c) 2021, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "interrupts";
import "common/reset";


config {
    map_mode = "hirom",
    expansion_type = "none",
    fastrom = false,
    region = "ntsc",

    // ::TODO give this game a name::
    title = "SNESDEV GAME JAM",
}


bank farcode  @ 0xc00000 : [constdata;  0x8000];
bank code     @ 0x808000 : [constdata;  0x8000];

bank rodata0  @ 0xc10000 : [constdata; 0x10000];
bank rodata1  @ 0xc20000 : [constdata; 0x10000];
bank rodata2  @ 0xc30000 : [constdata; 0x10000];

bank zeropage @ 0x000000 : [vardata;     0x100];
bank shadow   @ 0x7e0100 : [vardata;    0x1e80];
bank stack    @ 0x7e1f80 : [vardata;      0x80];
bank wram7e   @ 0x7e2000 : [vardata;    0xe000];
bank wram7f   @ 0x7f0000 : [vardata;   0x10000];


let STACK_TOP = 0x1fff;
let STACK_BOTTOM = 0x1f80;


in code {

// Define interrupt vectors

const @ 0x80ffe4 = invalid_handler; // native cop
const @ 0x80ffe6 = break_handler;   // native brk
const @ 0x80ffe8 = invalid_handler; // native abort
const @ 0x80ffea = nmi_handler;     // native nmi
const @ 0x80ffee = irq_handler;     // native irq

const @ 0x80FFF4 = invalid_handler; // emu cop
const @ 0x80FFF8 = invalid_handler; // emu abort
const @ 0x80FFFA = invalid_handler; // emu nmi
const @ 0x80FFFC = reset;           // emu reset
const @ 0x80FFFE = invalid_handler; // emu irq

}

in zeropage {
    var dpTmp0 : u16;
    var dpTmp1 : u16;
    var dpTmp2 : u16;
    var dpTmp3 : u16;
}


// VRAM Map
// ========

let VRAM_OBJ_WADDR = 0x6000;


