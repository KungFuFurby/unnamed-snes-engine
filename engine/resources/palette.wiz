// Copyright (c) 2023, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "src/memmap";
import "../registers";

import "resources";

import "gen/enums";


namespace palette {

struct _RamDataFormat {
    n_colors : u8,
};


in code {


// REQUIRES: Force-Blank
// Uses DMA channel 0
//
// DB = 0x80
#[mem8, idx16]
func load_palette__forceblank(paletteId : resources.palettes in a) {
var _ppuData : resources.PpuData_Dma0 in resources.ppuData;

var _header : _RamDataFormat in zpTmp_byte_0;

    _ppuData = resources.load_palette__inline(a, &_header as *u8, sizeof(typeof(_header)));

    aa = direct_page;
    a = _header.n_colors;
    mem16();
    #[mem16] {
        // DMA size
        yy = aa = aa << 1;
    }
    mem8();

    CGADD = 0;
    ^return resources.dma_to_cgram__forceblank(_ppuData, yy);
}

}

}


