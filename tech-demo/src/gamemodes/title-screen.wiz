// Copyright (c) 2022, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "../memmap";
import "engine/registers";
import "engine/common/reset";

import "engine/audio";
import "engine/gamemodes";
import "engine/wait-frame";
import "engine/resources/resources";
import "engine/resources/palette";

import "../joypad";

import "gen/enums";


namespace gamemodes {
namespace title_screen {

let VRAM_BG1_MAP_WADDR   = 0x0000;
let VRAM_BG1_TILES_WADDR = 0x2000;


in code {



// Title-screen
//
// DB = 0x7e
#[mem8, idx8]
func exec() {
    wait_multiple_frames_and_fadeout();

    // ::TODO improve title screen to complement this great song::
    audio.load_song_if_changed(resources.songs.TitleScreenTheme);


    push16(0x7e80);
    data_bank = pop8();
// DB = 0x80

    idx16();
    #[idx16] {
        setup_ppu();
    }
    mem8_idx8();

    data_bank = pop8();
// DB = 0x7e


    wait_multiple_frames_and_fadein();


    // Wait until the player pressed start
    do {
        wait_frame();

        a = joypad.pressed_h;
    } while a & joypad.JOYH.START == 0;


    audio.queue_sound_effect(sound_effects.menu_select);
    wait_frame();

    ^return switch_game_mode(GameModes.FILE_SELECT);
}



// Setup the PPU
//
// DB = 0x80
#[mem8, idx16]
inline func setup_ppu() {
    // Setup PPU
    reset_registers();

    // ::TODO move elsewhere::
    mem16();
    #[mem16] {
        bgA_scroll_x = 0;
        bgA_scroll_y = 0;
    }
    mem8();

    BGMODE = a = BGMODE_MODE_0;
    BG1SC = a = ((VRAM_BG1_MAP_WADDR / BGxSC_BASE_WALIGN) << BGxSC_BASE_SHIFT) | BGxSC_MAP_64x32;
    BG12NBA = a = ((VRAM_BG1_TILES_WADDR / BG12NBA_WALIGN) << BG12NBA_BG1_SHIFT);
    TM = a = TM_BG1;

    resources.load_bg_image_resource_into_vram(resources.bg_images.title_screen, VRAM_BG1_MAP_WADDR, VRAM_BG1_TILES_WADDR);
    palette.load_palette__forceblank(resources.palettes.title_screen);
}

}

}
}

// Fixes a circular dependency
import "engine/game/gamestate";

