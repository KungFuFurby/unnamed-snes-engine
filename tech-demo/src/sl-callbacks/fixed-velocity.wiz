// Copyright (c) 2024, Marcus Rowe <undisbeliever@gmail.com>.
// Distributed under The MIT License, see the LICENSE file for more details.

import "src/memmap";

import "gen/sl-callbacks";
import "engine/sl-callback-api";

import "engine/common/math";


namespace sl_callbacks {
namespace fixed_velocity {

in lowram {
    var xVelocity_sx : u16 in var_0;
    var xVelocity_px : u16 in var_1;

    var yVelocity_sx : u16 in var_2;
    var yVelocity_px : u16 in var_3;
}


in code {


// DB = 0x7e
#[mem8, idx8]
func init() {
    mem16_idx16();
    #[mem16, idx16] {
        xPos_px = aa = parameter__xPos;
        yPos_px = aa = parameter__yPos;


        // Promote sQ4.12 to sQ16.16
        sq4_12_to_sq16_16(parameter__xVelocity);
        xVelocity_sx = xx;
        xVelocity_px = aa;

        sq4_12_to_sq16_16(parameter__yVelocity);
        yVelocity_sx = xx;
        yVelocity_px = aa;
    }
    mem8_idx8();
}


// DB = 0x7e
#[mem8, idx8]
func process() {
    a = parameter__stationary_sl;
    if zero {
        mem16();
        #[mem16] {
            xPos_sx = aa = xPos_sx + xVelocity_sx;
            xPos_px = aa = xPos_px +# xVelocity_px;

            yPos_sx = aa = yPos_sx + yVelocity_sx;
            yPos_px = aa = yPos_px +# yVelocity_px;
        }
        mem8();

        ^return scroll_tilemap();
    }
}

}

}
}

