

# Validate input variables

ifndef BINARY
  $(error BINARY is not set)
endif

ifndef RESOURCES_DIR
  $(error RESOURCES_DIR is not set)
endif

ifndef SRC_DIR
  $(error SRC_DIR is not set)
endif

ifndef GEN_DIR
  $(error GEN_DIR is not set)
endif

ifndef ENGINE_DIR
  $(error ENGINE_DIR is not set)
endif


__INPUT_VARIABLES := $(BINARY) $(RESOURCES_DIR) $(SRC_DIR) $(GEN_DIR) $(ENGINE_DIR)

ifneq (5,$(words [$(__INPUT_VARIABLES)]))
  $(error Input variables cannot contain a space)
endif

ifneq (,$(findstring ',$(__INPUT_VARIABLES)))
  $(error Input variables cannot contain a ')
endif

ifneq (,$(findstring ",$(__INPUT_VARIABLES)))
  $(error Input variables cannot contain a ")
endif

ifneq (,$(findstring %,$(__INPUT_VARIABLES)))
  $(error Input variables cannot contain a %)
endif

ifneq (,$(findstring $$,$(__INPUT_VARIABLES)))
  $(error Input variables cannot contain a $$)
endif



ENGINE_SRC_DIR := $(ENGINE_DIR)/engine
AUDIO_SRC_DIR  := $(ENGINE_DIR)/terrific-audio-driver/audio-driver/src/
TOOLS_DIR      := $(ENGINE_DIR)/tools
WIZ_DIR        := $(ENGINE_DIR)/wiz

INTERMEDIATE_BINARY := $(GEN_DIR)/game-no-resources.sfc



.DELETE_ON_ERROR:
.SUFFIXES:
MAKEFLAGS += --no-builtin-rules


SOURCES := $(wildcard $(ENGINE_SRC_DIR)/*.wiz $(ENGINE_SRC_DIR)/*/*.wiz $(SRC_DIR)/*.wiz $(SRC_DIR)/*/*.wiz $(SRC_DIR)/*/*/*.wiz)

GEN_SOURCES  := $(GEN_DIR)/enums.wiz
GEN_SOURCES  += $(GEN_DIR)/function-tables.wiz
GEN_SOURCES  += $(GEN_DIR)/room-events.wiz
GEN_SOURCES  += $(GEN_DIR)/entities.wiz
GEN_SOURCES  += $(GEN_DIR)/ms-drawing-functions.wiz
GEN_SOURCES  += $(GEN_DIR)/arctan-table.wiz
GEN_SOURCES  += $(GEN_DIR)/cosine-tables.wiz

RESOURCES_SRC := $(wildcard $(RESOURCES_DIR)/*.json $(RESOURCES_DIR)/* $(RESOURCES_DIR)/*/* $(RESOURCES_DIR)/*/*/*)


AUDIO_DRIVER_SRC      := $(wildcard $(AUDIO_SRC_DIR)/*.wiz)
AUDIO_DRIVER_BINARIES := $(GEN_DIR)/audio-loader.bin $(GEN_DIR)/audio-driver.bin
AUDIO_DRIVER_DATA     := $(GEN_DIR)/audio-blank-song.bin

MLB_FILE  := $(patsubst %.sfc,%.mlb,$(BINARY))
SYM_FILES := $(patsubst %.sfc,%.sym,$(INTERMEDIATE_BINARY)) $(patsubst %.bin,%.sym,$(AUDIO_DRIVER_BINARIES))


COMMON_PYTHON_SCRIPTS = $(wildcard $(TOOLS_DIR)/unnamed_snes_game/*.py $(TOOLS_DIR)/unnamed_snes_game/*/*.py)


# Python interpreter
# (-bb issues errors on bytes/string comparisons)
PYTHON3  := python3 -bb

# Wiz compiler
WIZ      := $(WIZ_DIR)/bin/wiz


.PHONY: all
all: $(BINARY) $(MLB_FILE)


$(BINARY): $(INTERMEDIATE_BINARY) $(TOOLS_DIR)/insert_resources.py $(COMMON_PYTHON_SCRIPTS) $(RESOURCES_SRC)
	$(PYTHON3) '$(TOOLS_DIR)/insert_resources.py' --print-usage -o '$(BINARY)' '$(RESOURCES_DIR)' '$(INTERMEDIATE_BINARY:.sfc=.sym)' '$(INTERMEDIATE_BINARY)'


$(MLB_FILE): $(INTERMEDIATE_BINARY) $(AUDIO_DRIVER_BINARIES) $(TOOLS_DIR)/sym_to_mlb.py
	$(PYTHON3) '$(TOOLS_DIR)/sym_to_mlb.py' -o '$@' --hirom $(SYM_FILES)


$(INTERMEDIATE_BINARY): $(WIZ) $(SOURCES) $(GEN_SOURCES) $(AUDIO_DRIVER_BINARIES) $(AUDIO_DRIVER_DATA)
	$(WIZ) -s wla -I '$(ENGINE_DIR)/' '$(SRC_DIR)/main.wiz' -o '$(INTERMEDIATE_BINARY)'



.PHONY: audio-driver
audio-driver: $(AUDIO_DRIVER_BINARIES)

$(GEN_DIR)/audio-loader.bin: $(AUDIO_SRC_DIR)/loader.wiz $(AUDIO_SRC_DIR)/common_memmap.wiz $(AUDIO_SRC_DIR)/io-commands.wiz
	$(WIZ) --system=spc700 -s wla '$(AUDIO_SRC_DIR)/loader.wiz' -o '$@'

$(GEN_DIR)/audio-blank-song.bin: $(AUDIO_SRC_DIR)/blank-song.wiz $(AUDIO_SRC_DIR)/data-formats.wiz
	$(WIZ) --system=spc700 '$(AUDIO_SRC_DIR)/blank-song.wiz' -o '$@'

$(GEN_DIR)/audio-driver.bin: $(AUDIO_DRIVER_SRC)
	$(WIZ) --system=spc700 -s wla '$(AUDIO_SRC_DIR)/audio-driver.wiz' -o '$@'



.PHONY: wiz
wiz $(WIZ):
	$(MAKE) -C wiz


# Test if wiz needs recompiling
__UNUSED__ := $(shell $(MAKE) --quiet --question -C '$(WIZ_DIR)' bin/wiz)
ifneq ($(.SHELLSTATUS), 0)
  $(BINARY): wiz
  $(AUDIO_DRIVER_BINARIES): wiz
endif


$(GEN_DIR)/enums.wiz: $(RESOURCES_DIR)/mappings.json $(RESOURCES_DIR)/audio/project.terrificaudio $(TOOLS_DIR)/generate_enums_wiz.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_enums_wiz.py' -o '$@' '$(RESOURCES_DIR)/mappings.json' '$(RESOURCES_DIR)/audio/project.terrificaudio'

$(GEN_DIR)/function-tables.wiz: $(RESOURCES_DIR)/mappings.json $(RESOURCES_DIR)/entities.json $(TOOLS_DIR)/generate_function_tables_wiz.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_function_tables_wiz.py' -o '$@' '$(RESOURCES_DIR)/mappings.json' '$(RESOURCES_DIR)/entities.json'

$(GEN_DIR)/room-events.wiz: $(RESOURCES_DIR)/mappings.json $(TOOLS_DIR)/generate_room_events_wiz.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_room_events_wiz.py' -o '$@' '$(RESOURCES_DIR)/mappings.json'

$(GEN_DIR)/ms-drawing-functions.wiz: $(RESOURCES_DIR)/ms-export-order.json $(TOOLS_DIR)/generate_ms_drawing_functions.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_ms_drawing_functions.py' -o '$@' '$(RESOURCES_DIR)/ms-export-order.json'

$(GEN_DIR)/entities.wiz: $(RESOURCES_DIR)/entities.json $(RESOURCES_DIR)/ms-export-order.json $(TOOLS_DIR)/generate_entities_wiz.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_entities_wiz.py' -o '$@' '$(RESOURCES_DIR)/entities.json' '$(RESOURCES_DIR)/ms-export-order.json'

$(GEN_DIR)/arctan-table.wiz: $(TOOLS_DIR)/generate_arctan_table.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_arctan_table.py' -o '$@'

$(GEN_DIR)/cosine-tables.wiz: $(TOOLS_DIR)/generate_cosine_tables.py $(COMMON_PYTHON_SCRIPTS)
	$(PYTHON3) '$(TOOLS_DIR)/generate_cosine_tables.py' -o '$@'


$(GEN_SOURCES): $(GEN_DIR)/
$(INTERMEDIATE_BINARY): $(GEN_DIR)/
$(GEN_DIR)/:
	mkdir '$(GEN_DIR)/'


.PHONY: clean
clean:
	$(RM) $(BINARY) $(INTERMEDIATE_BINARY) $(AUDIO_DRIVER_BINARIES) $(AUDIO_DRIVER_DATA)
	$(RM) $(MLB_FILE) $(SYM_FILES)
	$(RM) $(GEN_SOURCES)


.PHONY: clean-wiz
clean-wiz:
	$(MAKE) -C '$(WIZ_DIR)' clean


