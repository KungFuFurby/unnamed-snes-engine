// S-CPU/SPC700 communication protocol definitions
//
// SPDX-FileCopyrightText: © 2023 Marcus Rowe <undisbeliever@gmail.com>
// SPDX-License-Identifier: Zlib
//
// Copyright © 2023 Marcus Rowe <undisbeliever@gmail.com>
//
// This software is provided 'as-is', without any express or implied warranty.  In
// no event will the authors be held liable for any damages arising from the use of
// this software.
//
// Permission is granted to anyone to use this software for any purpose, including
// commercial applications, and to alter it and redistribute it freely, subject to
// the following restrictions:
//
//      1. The origin of this software must not be misrepresented; you must not
//         claim that you wrote the original software. If you use this software in
//         a product, an acknowledgment in the product documentation would be
//         appreciated but is not required.
//
//      2. Altered source versions must be plainly marked as such, and must not be
//         misrepresented as being the original software.
//
//      3. This notice may not be removed or altered from any source distribution.


import "registers";


// IO Commands
// ===========


// MUST match `src/audio.wiz`
namespace IO {
    // The audio-driver MUST NOT use IO port 3 (without rewriting the loader).
    //
    // Port 3 is used by the loader to signal to the S-CPU that the loader is running.

    extern const command_id  @ &smp.io_port_in_0 : u8;
    extern writeonly command_id_ack @ &smp.io_port_out_0 : u8;

    extern const command @ &smp.io_port_in_1 : u8;
}


// MUST match `audio/src/audio-driver.wiz`
enum IoCommand : u8 {
    // commands 0-127: Play sound effect.

    // ::TODO add a few 'EXECUTE_LOADER' checks in the bytecode::
    // ::: Prevent an infinite loop in the bytecode from deadlocking the S-CPU code::
    EXECUTE_LOADER = 0x80 | 'L',
};
